/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3>;
        };

        Layer: Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER";
            bindings = <&lt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q                &kp W        &kp E            &kp R              &kp T          &kp Y    &kp U               &kp I        &kp O        &kp P                     &trans
&trans  &hml LEFT_CONTROL A  &hml LALT S  &hml LGUI D      &hml LEFT_SHIFT F  &kp G          &kp H    &hmr RIGHT_SHIFT J  &hmr LGUI K  &hmr LALT L  &hmr LCTRL Ã–              &trans
&trans  &kp Z                &kp X        &kp C            &kp V              &kp B          &kp N    &kp M               &kp COMMA    &kp DOT      &kp MINUS                 &trans
                                          &lt 3 BACKSPACE  &lt 2 TAB          &lt 1 SPACE    &kp RET  &kp PAGE_DOWN       &kp PAGE_UP
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1            &kp N2        &kp N3        &kp N4          &kp N5    &kp N6    &kp N7    &kp N8         &kp N9       &kp N0   &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &trans    &kp LEFT  &kp DOWN  &kp UP         &kp RIGHT    &trans   &trans
&trans  &trans            &trans        &trans        &trans          &trans    &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END  &trans
                                        &trans        &trans          &trans    &kp RET   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL          &kp TILDE          &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND           &kp CARET   &kp PERCENT  &kp ASTRK  &kp LPAR       &kp QUESTION  &trans
&trans  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE                &kp DOLLAR  &kp EQUAL    &kp PLUS   &kp AT_SIGN    &kp HASH      &trans
&trans  &kp LESS_THAN     &kp GREATER_THAN   &kp LBKT              &kp RBKT               &kp NON_US_BACKSLASH    &kp UNDER   &kp SLASH    &kp MINUS  &kp SEMICOLON  &kp COLON     &trans
                                             &trans                &trans                 &trans                  &kp RET     &trans       &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
